[2025-03-03T06:03:47.806+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_pipeline_query.create_dim_monthly_customers_retention manual__2025-03-03T05:39:13.029042+00:00 [queued]>
[2025-03-03T06:03:47.840+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_pipeline_query.create_dim_monthly_customers_retention manual__2025-03-03T05:39:13.029042+00:00 [queued]>
[2025-03-03T06:03:47.841+0000] {taskinstance.py:1308} INFO - Starting attempt 2 of 3
[2025-03-03T06:03:48.374+0000] {taskinstance.py:1327} INFO - Executing <Task(PostgresOperator): create_dim_monthly_customers_retention> on 2025-03-03 05:39:13.029042+00:00
[2025-03-03T06:03:48.408+0000] {standard_task_runner.py:57} INFO - Started process 19152 to run task
[2025-03-03T06:03:48.412+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'dag_pipeline_query', 'create_dim_monthly_customers_retention', 'manual__2025-03-03T05:39:13.029042+00:00', '--job-id', '59', '--raw', '--subdir', 'DAGS_FOLDER/dag_pipeline_query.py', '--cfg-path', '/tmp/tmpnz6roazv']
[2025-03-03T06:03:48.415+0000] {standard_task_runner.py:85} INFO - Job 59: Subtask create_dim_monthly_customers_retention
[2025-03-03T06:03:48.532+0000] {logging_mixin.py:149} WARNING - /home/***/.local/lib/python3.7/site-packages/***/settings.py:195 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-03-03T06:03:48.674+0000] {task_command.py:410} INFO - Running <TaskInstance: dag_pipeline_query.create_dim_monthly_customers_retention manual__2025-03-03T05:39:13.029042+00:00 [running]> on host 9b8c8285a7ac
[2025-03-03T06:03:49.880+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='Raffi' AIRFLOW_CTX_DAG_ID='dag_pipeline_query' AIRFLOW_CTX_TASK_ID='create_dim_monthly_customers_retention' AIRFLOW_CTX_EXECUTION_DATE='2025-03-03T05:39:13.029042+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-03T05:39:13.029042+00:00'
[2025-03-03T06:03:49.884+0000] {sql.py:262} INFO - Executing: -- monthly custome retention 
CREATE TABLE IF NOT EXISTS dim_monthly_customers_retention AS
WITH monthly_customers AS (
    SELECT 
        customer_id,
        DATE_TRUNC('month', order_date) AS bulan
    FROM fact_sales
    GROUP BY customer_id, bulan
),
retention AS (
    SELECT 
        mc1.bulan,
        COUNT(DISTINCT mc1.customer_id) AS total_customers,
        COUNT(DISTINCT mc2.customer_id) AS retained_customers
    FROM monthly_customers mc1
    LEFT JOIN monthly_customers mc2
        ON mc1.customer_id = mc2.customer_id  
        AND mc2.bulan = mc1.bulan + INTERVAL '1 month'
    GROUP BY mc1.bulan
),
retention_rate AS (
    SELECT 
        bulan,
        total_customers,
        retained_customers, 
        (retained_customers * 100.0 / NULLIF(total_customers, 0)) AS retention_rate_percent
    FROM retention
)
SELECT * FROM retention_rate;
[2025-03-03T06:03:49.928+0000] {base.py:73} INFO - Using connection ID 'sales_project_conn' for task execution.
[2025-03-03T06:03:50.112+0000] {base.py:73} INFO - Using connection ID 'sales_project_conn' for task execution.
[2025-03-03T06:03:50.471+0000] {sql.py:375} INFO - Running statement: -- monthly custome retention 
CREATE TABLE IF NOT EXISTS dim_monthly_customers_retention AS
WITH monthly_customers AS (
    SELECT 
        customer_id,
        DATE_TRUNC('month', order_date) AS bulan
    FROM fact_sales
    GROUP BY customer_id, bulan
),
retention AS (
    SELECT 
        mc1.bulan,
        COUNT(DISTINCT mc1.customer_id) AS total_customers,
        COUNT(DISTINCT mc2.customer_id) AS retained_customers
    FROM monthly_customers mc1
    LEFT JOIN monthly_customers mc2
        ON mc1.customer_id = mc2.customer_id  
        AND mc2.bulan = mc1.bulan + INTERVAL '1 month'
    GROUP BY mc1.bulan
),
retention_rate AS (
    SELECT 
        bulan,
        total_customers,
        retained_customers, 
        (retained_customers * 100.0 / NULLIF(total_customers, 0)) AS retention_rate_percent
    FROM retention
)
SELECT * FROM retention_rate;, parameters: None
[2025-03-03T06:03:51.463+0000] {sql.py:384} INFO - Rows affected: 12
[2025-03-03T06:03:52.476+0000] {taskinstance.py:1350} INFO - Marking task as SUCCESS. dag_id=dag_pipeline_query, task_id=create_dim_monthly_customers_retention, execution_date=20250303T053913, start_date=20250303T060347, end_date=20250303T060352
[2025-03-03T06:03:52.641+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 0
[2025-03-03T06:03:52.739+0000] {taskinstance.py:2651} INFO - 0 downstream tasks scheduled from follow-on schedule check
