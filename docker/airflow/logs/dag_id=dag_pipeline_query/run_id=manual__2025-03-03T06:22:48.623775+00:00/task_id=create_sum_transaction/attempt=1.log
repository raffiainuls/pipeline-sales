[2025-03-03T06:31:36.900+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_pipeline_query.create_sum_transaction manual__2025-03-03T06:22:48.623775+00:00 [queued]>
[2025-03-03T06:31:36.926+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_pipeline_query.create_sum_transaction manual__2025-03-03T06:22:48.623775+00:00 [queued]>
[2025-03-03T06:31:36.927+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 2
[2025-03-03T06:31:38.140+0000] {taskinstance.py:1327} INFO - Executing <Task(PostgresOperator): create_sum_transaction> on 2025-03-03 06:22:48.623775+00:00
[2025-03-03T06:31:38.179+0000] {standard_task_runner.py:57} INFO - Started process 22789 to run task
[2025-03-03T06:31:38.185+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'dag_pipeline_query', 'create_sum_transaction', 'manual__2025-03-03T06:22:48.623775+00:00', '--job-id', '82', '--raw', '--subdir', 'DAGS_FOLDER/dag_pipeline_query.py', '--cfg-path', '/tmp/tmpewb_v_sa']
[2025-03-03T06:31:38.192+0000] {standard_task_runner.py:85} INFO - Job 82: Subtask create_sum_transaction
[2025-03-03T06:31:38.661+0000] {logging_mixin.py:149} WARNING - /home/***/.local/lib/python3.7/site-packages/***/settings.py:195 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-03-03T06:31:38.926+0000] {task_command.py:410} INFO - Running <TaskInstance: dag_pipeline_query.create_sum_transaction manual__2025-03-03T06:22:48.623775+00:00 [running]> on host 9b8c8285a7ac
[2025-03-03T06:31:39.783+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='Raffi' AIRFLOW_CTX_DAG_ID='dag_pipeline_query' AIRFLOW_CTX_TASK_ID='create_sum_transaction' AIRFLOW_CTX_EXECUTION_DATE='2025-03-03T06:22:48.623775+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-03T06:22:48.623775+00:00'
[2025-03-03T06:31:39.785+0000] {sql.py:262} INFO - Executing: 
            CREATE TABLE IF NOT EXISTS sum_transaction AS
            SELECT * FROM (-- sum_transaction
with 
-- income for offline store 
iofs as (
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
amount
from fact_sales 
where is_online_transaction = 'false'
), 
-- income for online_store
ions as(
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
(price * quantity) as amount
from fact_sales
where is_online_transaction = 'true'
),
--outcome_ongkir_online_store
oos as (
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran untuk biaya ongkir' as description,
order_date as date,
delivery_fee as amount
from fact_sales
where is_free_delivery_fee = 'true'),
-- outcome diskon sales
ods as(
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran diskon ' || disc_name  as description,
order_date as date,
(price * quantity) * disc/100 as amount
from fact_sales
where disc is not null
)
select
* 
from iofs
union
select 
* 
from ions
union 
select 
*
from oos
union
select 
* 
from ods) AS subquery WHERE FALSE;

            TRUNCATE TABLE sum_transaction;

            INSERT INTO sum_transaction
            -- sum_transaction
with 
-- income for offline store 
iofs as (
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
amount
from fact_sales 
where is_online_transaction = 'false'
), 
-- income for online_store
ions as(
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
(price * quantity) as amount
from fact_sales
where is_online_transaction = 'true'
),
--outcome_ongkir_online_store
oos as (
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran untuk biaya ongkir' as description,
order_date as date,
delivery_fee as amount
from fact_sales
where is_free_delivery_fee = 'true'),
-- outcome diskon sales
ods as(
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran diskon ' || disc_name  as description,
order_date as date,
(price * quantity) * disc/100 as amount
from fact_sales
where disc is not null
)
select
* 
from iofs
union
select 
* 
from ions
union 
select 
*
from oos
union
select 
* 
from ods;
        
[2025-03-03T06:31:39.846+0000] {base.py:73} INFO - Using connection ID 'sales_project_conn' for task execution.
[2025-03-03T06:31:40.126+0000] {base.py:73} INFO - Using connection ID 'sales_project_conn' for task execution.
[2025-03-03T06:31:40.188+0000] {sql.py:375} INFO - Running statement: 
            CREATE TABLE IF NOT EXISTS sum_transaction AS
            SELECT * FROM (-- sum_transaction
with 
-- income for offline store 
iofs as (
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
amount
from fact_sales 
where is_online_transaction = 'false'
), 
-- income for online_store
ions as(
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
(price * quantity) as amount
from fact_sales
where is_online_transaction = 'true'
),
--outcome_ongkir_online_store
oos as (
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran untuk biaya ongkir' as description,
order_date as date,
delivery_fee as amount
from fact_sales
where is_free_delivery_fee = 'true'),
-- outcome diskon sales
ods as(
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran diskon ' || disc_name  as description,
order_date as date,
(price * quantity) * disc/100 as amount
from fact_sales
where disc is not null
)
select
* 
from iofs
union
select 
* 
from ions
union 
select 
*
from oos
union
select 
* 
from ods) AS subquery WHERE FALSE;

            TRUNCATE TABLE sum_transaction;

            INSERT INTO sum_transaction
            -- sum_transaction
with 
-- income for offline store 
iofs as (
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
amount
from fact_sales 
where is_online_transaction = 'false'
), 
-- income for online_store
ions as(
select 
'income' as type,
id as sales_id,
branch_id,
null as employee_id,
'Penjualan ' || product_name || ' sejumlah ' || quantity as description,
order_date as date,
(price * quantity) as amount
from fact_sales
where is_online_transaction = 'true'
),
--outcome_ongkir_online_store
oos as (
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran untuk biaya ongkir' as description,
order_date as date,
delivery_fee as amount
from fact_sales
where is_free_delivery_fee = 'true'),
-- outcome diskon sales
ods as(
select 
'outcome' as type,
id as sales_id,
branch_id,
null as employee_id,
'Pengeluaran diskon ' || disc_name  as description,
order_date as date,
(price * quantity) * disc/100 as amount
from fact_sales
where disc is not null
)
select
* 
from iofs
union
select 
* 
from ions
union 
select 
*
from oos
union
select 
* 
from ods;
        , parameters: None
[2025-03-03T06:31:41.151+0000] {sql.py:384} INFO - Rows affected: 10613
[2025-03-03T06:31:42.319+0000] {taskinstance.py:1350} INFO - Marking task as SUCCESS. dag_id=dag_pipeline_query, task_id=create_sum_transaction, execution_date=20250303T062248, start_date=20250303T063136, end_date=20250303T063142
[2025-03-03T06:31:43.090+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 0
[2025-03-03T06:31:43.359+0000] {taskinstance.py:2651} INFO - 1 downstream tasks scheduled from follow-on schedule check
