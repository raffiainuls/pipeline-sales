[2025-03-03T06:33:22.658+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: dag_pipeline_query.create_dim_branch_weakly_finance_performance manual__2025-03-03T06:22:48.623775+00:00 [queued]>
[2025-03-03T06:33:22.675+0000] {taskinstance.py:1103} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: dag_pipeline_query.create_dim_branch_weakly_finance_performance manual__2025-03-03T06:22:48.623775+00:00 [queued]>
[2025-03-03T06:33:22.676+0000] {taskinstance.py:1308} INFO - Starting attempt 1 of 2
[2025-03-03T06:33:22.905+0000] {taskinstance.py:1327} INFO - Executing <Task(PostgresOperator): create_dim_branch_weakly_finance_performance> on 2025-03-03 06:22:48.623775+00:00
[2025-03-03T06:33:23.034+0000] {standard_task_runner.py:57} INFO - Started process 23042 to run task
[2025-03-03T06:33:23.038+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'dag_pipeline_query', 'create_dim_branch_weakly_finance_performance', 'manual__2025-03-03T06:22:48.623775+00:00', '--job-id', '94', '--raw', '--subdir', 'DAGS_FOLDER/dag_pipeline_query.py', '--cfg-path', '/tmp/tmp39mgyspn']
[2025-03-03T06:33:23.040+0000] {standard_task_runner.py:85} INFO - Job 94: Subtask create_dim_branch_weakly_finance_performance
[2025-03-03T06:33:23.442+0000] {logging_mixin.py:149} WARNING - /home/***/.local/lib/python3.7/site-packages/***/settings.py:195 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-03-03T06:33:23.633+0000] {task_command.py:410} INFO - Running <TaskInstance: dag_pipeline_query.create_dim_branch_weakly_finance_performance manual__2025-03-03T06:22:48.623775+00:00 [running]> on host 9b8c8285a7ac
[2025-03-03T06:33:24.969+0000] {taskinstance.py:1547} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='Raffi' AIRFLOW_CTX_DAG_ID='dag_pipeline_query' AIRFLOW_CTX_TASK_ID='create_dim_branch_weakly_finance_performance' AIRFLOW_CTX_EXECUTION_DATE='2025-03-03T06:22:48.623775+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-03-03T06:22:48.623775+00:00'
[2025-03-03T06:33:24.970+0000] {sql.py:262} INFO - Executing: 
            CREATE TABLE IF NOT EXISTS dim_branch_weakly_finance_performance AS
            SELECT * FROM (-- dim_branch_weakly_finance_performance 
 --  unit_sold 
   with uss as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity) unit_sold
from fact_sales fs2 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2
),
-- gmv 
gmv as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity * price) amount
from fact_sales fs2 
left join tbl_branch tb 
on tb.id = fs2.branch_id 
group by 1,2
),
-- total outcome
outcome as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id
where type = 'outcome'
group by 1,2
),
-- revenue 
revenue as (
select
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id 
where type = 'income' and sales_id is not null 
group by 1,2 
),
-- gross profit
gross_profit as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum((fs2.price * tp.profit  / 100) * fs2.quantity)  as amount
from fact_sales fs2 
left join tbl_product tp 
on tp.id  = fs2.product_id 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2 
),
-- net_profit
net_profit as (
select 
gp.name, 
gp.week,
(gp.amount - o.amount) as amount
from gross_profit gp
left join outcome o
on  o.week = gp.week and o.name = gp.name
)
select 
u.name, 
u.week,
u.unit_sold,
g.amount as gmv,
o.amount as outcome,
r.amount as revenue,
gp.amount as gross_profit,
np.amount as nett_profit
from uss u
left join gmv g
on g.week = u.week and g.name = u.name 
left join outcome o
on o.week = u.week and o.name = u.name
left join revenue r
on r.week = u.week and r.name = u.name
left join gross_profit gp 
on gp.week = u.week  and gp.name = u.name
left join net_profit np 
on np.week = u.week and np.name = u.name ) AS subquery WHERE FALSE;

            TRUNCATE TABLE dim_branch_weakly_finance_performance;

            INSERT INTO dim_branch_weakly_finance_performance
            -- dim_branch_weakly_finance_performance 
 --  unit_sold 
   with uss as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity) unit_sold
from fact_sales fs2 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2
),
-- gmv 
gmv as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity * price) amount
from fact_sales fs2 
left join tbl_branch tb 
on tb.id = fs2.branch_id 
group by 1,2
),
-- total outcome
outcome as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id
where type = 'outcome'
group by 1,2
),
-- revenue 
revenue as (
select
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id 
where type = 'income' and sales_id is not null 
group by 1,2 
),
-- gross profit
gross_profit as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum((fs2.price * tp.profit  / 100) * fs2.quantity)  as amount
from fact_sales fs2 
left join tbl_product tp 
on tp.id  = fs2.product_id 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2 
),
-- net_profit
net_profit as (
select 
gp.name, 
gp.week,
(gp.amount - o.amount) as amount
from gross_profit gp
left join outcome o
on  o.week = gp.week and o.name = gp.name
)
select 
u.name, 
u.week,
u.unit_sold,
g.amount as gmv,
o.amount as outcome,
r.amount as revenue,
gp.amount as gross_profit,
np.amount as nett_profit
from uss u
left join gmv g
on g.week = u.week and g.name = u.name 
left join outcome o
on o.week = u.week and o.name = u.name
left join revenue r
on r.week = u.week and r.name = u.name
left join gross_profit gp 
on gp.week = u.week  and gp.name = u.name
left join net_profit np 
on np.week = u.week and np.name = u.name ;
        
[2025-03-03T06:33:25.004+0000] {base.py:73} INFO - Using connection ID 'sales_project_conn' for task execution.
[2025-03-03T06:33:25.137+0000] {base.py:73} INFO - Using connection ID 'sales_project_conn' for task execution.
[2025-03-03T06:33:25.166+0000] {sql.py:375} INFO - Running statement: 
            CREATE TABLE IF NOT EXISTS dim_branch_weakly_finance_performance AS
            SELECT * FROM (-- dim_branch_weakly_finance_performance 
 --  unit_sold 
   with uss as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity) unit_sold
from fact_sales fs2 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2
),
-- gmv 
gmv as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity * price) amount
from fact_sales fs2 
left join tbl_branch tb 
on tb.id = fs2.branch_id 
group by 1,2
),
-- total outcome
outcome as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id
where type = 'outcome'
group by 1,2
),
-- revenue 
revenue as (
select
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id 
where type = 'income' and sales_id is not null 
group by 1,2 
),
-- gross profit
gross_profit as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum((fs2.price * tp.profit  / 100) * fs2.quantity)  as amount
from fact_sales fs2 
left join tbl_product tp 
on tp.id  = fs2.product_id 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2 
),
-- net_profit
net_profit as (
select 
gp.name, 
gp.week,
(gp.amount - o.amount) as amount
from gross_profit gp
left join outcome o
on  o.week = gp.week and o.name = gp.name
)
select 
u.name, 
u.week,
u.unit_sold,
g.amount as gmv,
o.amount as outcome,
r.amount as revenue,
gp.amount as gross_profit,
np.amount as nett_profit
from uss u
left join gmv g
on g.week = u.week and g.name = u.name 
left join outcome o
on o.week = u.week and o.name = u.name
left join revenue r
on r.week = u.week and r.name = u.name
left join gross_profit gp 
on gp.week = u.week  and gp.name = u.name
left join net_profit np 
on np.week = u.week and np.name = u.name ) AS subquery WHERE FALSE;

            TRUNCATE TABLE dim_branch_weakly_finance_performance;

            INSERT INTO dim_branch_weakly_finance_performance
            -- dim_branch_weakly_finance_performance 
 --  unit_sold 
   with uss as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity) unit_sold
from fact_sales fs2 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2
),
-- gmv 
gmv as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum(quantity * price) amount
from fact_sales fs2 
left join tbl_branch tb 
on tb.id = fs2.branch_id 
group by 1,2
),
-- total outcome
outcome as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id
where type = 'outcome'
group by 1,2
),
-- revenue 
revenue as (
select
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM st.date - DATE '2024-12-29') / 7) * 7) AS week,
sum(amount) amount
from sum_transactions st 
left join tbl_branch tb
on tb.id = st.branch_id 
where type = 'income' and sales_id is not null 
group by 1,2 
),
-- gross profit
gross_profit as (
select 
tb.name, 
date(DATE '2024-12-29' + INTERVAL '1 day' * FLOOR(EXTRACT(DAY FROM fs2.order_date - DATE '2024-12-29') / 7) * 7) AS week,
sum((fs2.price * tp.profit  / 100) * fs2.quantity)  as amount
from fact_sales fs2 
left join tbl_product tp 
on tp.id  = fs2.product_id 
left join tbl_branch tb
on tb.id = fs2.branch_id 
group by 1,2 
),
-- net_profit
net_profit as (
select 
gp.name, 
gp.week,
(gp.amount - o.amount) as amount
from gross_profit gp
left join outcome o
on  o.week = gp.week and o.name = gp.name
)
select 
u.name, 
u.week,
u.unit_sold,
g.amount as gmv,
o.amount as outcome,
r.amount as revenue,
gp.amount as gross_profit,
np.amount as nett_profit
from uss u
left join gmv g
on g.week = u.week and g.name = u.name 
left join outcome o
on o.week = u.week and o.name = u.name
left join revenue r
on r.week = u.week and r.name = u.name
left join gross_profit gp 
on gp.week = u.week  and gp.name = u.name
left join net_profit np 
on np.week = u.week and np.name = u.name ;
        , parameters: None
[2025-03-03T06:33:25.383+0000] {sql.py:384} INFO - Rows affected: 2516
[2025-03-03T06:33:25.769+0000] {taskinstance.py:1350} INFO - Marking task as SUCCESS. dag_id=dag_pipeline_query, task_id=create_dim_branch_weakly_finance_performance, execution_date=20250303T062248, start_date=20250303T063322, end_date=20250303T063325
[2025-03-03T06:33:26.019+0000] {local_task_job_runner.py:225} INFO - Task exited with return code 0
[2025-03-03T06:33:26.088+0000] {taskinstance.py:2651} INFO - 1 downstream tasks scheduled from follow-on schedule check
